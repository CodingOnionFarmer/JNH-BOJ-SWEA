move = ((((1, 0), (0, 1),), ((1, 0), (0, 1), (-1, 0),), ((1, 0), (0, 1), (-1, 0),), ((-1, 0), (0, 1),),),
        (((0, -1), (0, 1), (1, 0),), ((0, -1), (0, 1), (1, 0), (-1, 0),), ((0, -1), (0, 1), (1, 0), (-1, 0),),
         ((0, -1), (0, 1), (-1, 0),),),
        (((0, -1), (0, 1), (1, 0),), ((0, -1), (0, 1), (1, 0), (-1, 0),), ((0, -1), (0, 1), (1, 0), (-1, 0),),
         ((0, -1), (0, 1), (-1, 0),),),
        (((1, 0), (0, -1),), ((1, 0), (0, -1), (-1, 0),), ((1, 0), (0, -1), (-1, 0),), ((-1, 0), (0, -1),),),
        )


def dfs(d, s, x, y):
    if d == 6:
        numbers.add(s)
        return
    for m in move[x][y]:
        dfs(d + 1, s + board[x + m[1]][y + m[0]], x + m[1], y + m[0])
    return


for tc in range(1, int(input()) + 1):
    board = tuple(tuple(input().split()) for _ in range(4))
    numbers = set()
    for i in range(4):
        for j in range(4):
            dfs(0, board[i][j], i, j)
    print(f'#{tc}', len(numbers))
